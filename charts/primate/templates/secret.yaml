apiVersion: v1
kind: Secret
metadata:
  name: {{ include "primate.fullname" . }}-config
  labels:
    {{- include "primate.labels" . | nindent 4 }}
type: Opaque
data:
  primate.yaml: {{ .Values.primateConfig |b64enc}}
stringData:
  {{-  if .Values.proxy.htpasswd.enabled}}
  htpasswd: |-
    {{- range $entries := .Values.proxy.htpasswd.entries }}
    {{ $entries }}
    {{- end -}}
  {{- end}}
  {{-  if .Values.proxy.authenticatedEmails}}
  emails.txt: |-
    {{- range $entries := .Values.proxy.authenticatedEmails }}
    {{ $entries }}
    {{- end -}}
  {{- end}}
  proxy.cfg: |
    http_address = ":4180"
    reverse_proxy = true

    upstreams = [
    "http://localhost:8080/"
    ]

    {{- with .Values.proxy.redirectUrl }}
    redirect_url = {{ . |quote}}
    {{- end }}

    pass_user_headers = true
    pass_host_header = true
    pass_access_token = false

    {{-  if .Values.proxy.htpasswd.enabled}}
    htpasswd_file = "/config/users.txt"
    {{- end}}

    {{-  if .Values.proxy.emailDomains}}
    email_domains = [
    {{- range $entries := .Values.proxy.emailDomains }}
    {{ $entries | quote }}
    {{- end}}
    ]
    {{- end}}

    {{-  if .Values.proxy.emailDomains}}
    email_domains = [
    {{- range $entries := .Values.proxy.emailDomains }}
    {{ $entries | quote }}
    {{- end}}
    ]
    {{- end}}

    {{-  if .Values.proxy.authenticatedEmails}}
    authenticated_emails_file = "/config/emails.txt"
    {{- end}}

    provider = {{- required "A valid .Values.proxy.provider entry required!" .Values.proxy.provider | quote}}
    client_id = {{- required "A valid .Values.proxy.clientId entry required!" .Values.proxy.clientId | quote}}
    client_secret = {{- required "A valid .Values.proxy.clientSecret entry required!" .Values.proxy.clientSecret | quote}}

    skip_auth_routes = [
      "GET=^/healthz"
    ]

    cookie_name = "primate_oauth2_proxy"
    cookie_secret = {{- required "A valid .Values.proxy.cookieSecret entry required!" .Values.proxy.cookieSecret | quote}}
    cookie_expire = "168h"
    cookie_refresh = "1h"
    cookie_secure = true
    cookie_httponly = true
    # cookie_domains = ""

    {{ .Values.proxy.customConfig | nindent 4 }}
